#!/usr/bin/python3 -B
#-*- coding:utf-8 -*-

import os
import sys

import optparse

import tasker

parser = optparse.OptionParser()
parser.add_option('-f', '--file',
                dest='task_module', default='tasks.py',
                metavar='FILE',
                help='''use FILE as the tasks file
                defaults to « tasks »''',
)
parser.add_option('-c', '--create',
                dest='create_task_file', default=False, action='store_true',
                help='''creates a new template task FILE, ready to use,
                as specified with the --file option.''',
)

try:
    tasker_user_dir = os.path.expanduser('~/.tasker')
    if not os.path.exists(tasker_user_dir):
        os.mkdir(tasker_user_dir)
    tasker_modules_dir = os.path.join(tasker_user_dir, 'modules')
    if not os.path.exists(tasker_modules_dir):
        os.mkdir(tasker_modules_dir)
    if os.path.exists(tasker_modules_dir):
        if tasker_modules_dir not in sys.path:
            sys.path.append(tasker_modules_dir)
except OSError as ose:
    sys.stderr.write('%s.\n' % ose)
    sys.exit(12)


options, args = parser.parse_args()

if options.create_task_file:
    task_file = options.task_module
    if os.path.exists(task_file):
        sys.stderr.write('« %s » already exists and will not be overwritten.\n' % task_file)
        sys.exit(10)
    try:
        task_template_filepath = os.path.join(
            os.path.dirname(tasker.__file__),
            'data/tasks.py'
        )
        template_task_file = open(task_template_filepath, 'r')
        f = open(task_file, 'w')
        f.write(template_task_file.read())
        template_task_file.close()
        f.close()
    except OSError as ose:
        sys.stderr.write('Could not create the task file at « %s ».Reason: %s\n' % (task_file, ose))
        sys.exit(11)
    else:
        sys.exit(0)

main_tasker = tasker.Tasker(options.task_module)
main_tasker.run(args)
